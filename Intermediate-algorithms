
1. Sum all numbers in a range

function sumAll(arr) {

  arr = arr.sort(function (a, b) {  return a - b;  });
  max =  Math.max(...arr);
  min = Math.min(...arr);
  var new_arr = [];
  for (var i=min; i<= max; i++){
 	new_arr.push(i);
  }
  var total = new_arr.reduce(function(a, b) {
  return a + b;
});

  return total;
}

2. Diff Array

function diffArray(arr1, arr2) {

 var newArr = [];
 var concatarr = arr1.concat(arr2);
 
 var filter1 = concatarr.filter(function symmetry(value) {
  	if(arr1.indexOf(value) == -1){
  		newArr.push(value);
  		return value;	
  	}
 });
 
  var filter2 = concatarr.filter(function symmetry(value) {
  	if(arr2.indexOf(value) == -1){
  		newArr.push(value);
  		return value;	
  	}
 });

return newArr;

}


3.

function convertToRoman(num) {
	
  var roman = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];
  var numerals = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
  var result = '';
  
  for(var i=0;i<roman.length;i++){
  	console.log(i);
  	while(num>=numerals[i]){
  		result += roman[i];
  		num -= numerals[i];
  		
  	}
  }
	return result;
}

convertToRoman(39);

4. function sumFibs(num) {

var fibonacc = [1,1];
var i= 1;
var result = 2;
while(fibonacc[i-1]+fibonacc[i]<=num){

	fibonacc.push(fibonacc[i-1]+fibonacc[i]);
    if((fibonacc[i-1]+fibonacc[i])%2!==0){
    	result+=fibonacc[i-1]+fibonacc[i];
    }
    i++;
	
}

  return result;
}

sumFibs(4);

5. function whatIsInAName(collection, source) {

  var srckeys = Object.keys(source);
  var arr = collection.filter(function( index ) {
    var result = [];
    for(var i in srckeys){
    	if(index.hasOwnProperty(srckeys[i])&&index[srckeys[i]]===source[srckeys[i]]){
    		result.push("true");
    	}
    }
    if (result.length === srckeys.length){return index;}
    
  });
  
  return arr;
}


21. 

function addTogether() {

    function sumTwoAnd() {

	if(typeof arguments[0] !== 'number'){
      	   return undefined;
	}
	else
	{
	  return value1+arguments[0];	
	}
    }	
    
    if(arguments.length>1){
    	if(typeof arguments[0] !== 'number' || typeof arguments[1] !== 'number'){
    	return undefined;
    	}
    	else{
    	return arguments[0]+arguments[1];	
    	}
    }
    	 
    else if(arguments.length<=1){

    	if(typeof arguments[0] !== 'number'){
    		return undefined;
    	}
		var value1 = arguments[0];
		return sumTwoAnd;
	}
  
}
