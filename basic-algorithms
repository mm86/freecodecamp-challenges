1. Reverse a string:

function FirstReverse(str) { 
  var rev_str = "";
  for(var i=str.length-1; i>=0; i--){
  	console.log(i);
  	rev_str += str[i];
  }
  return rev_str;  
}

2. Factorial of a given number

function factorialize(num) {
  var fact = 1;
  while(num > 0){
    fact *= num;
    num -= 1;
  }
  return fact;
}

3. Palindrome

function palindrome(str) {
  str = str.replace(/[^A-Za-z0-9]/g, '').split(" ").join("").toLowerCase();
  var new_str = str.split("").reverse().join("");
  return str===new_str;
}

4. Longest word in a string

function findLongestWord(str) {

  str = str.split(" ");
  var longest = 0;
  for(var i in str){
  	if(str[i].length>longest){
  		longest = str[i].length;
  	}
  }
  return longest;
}

5. Capitalize first character of each word in a string

function titleCase(str) {
  var words = str.toLowerCase().split(" ");
  var new_words = [];
  for (var i = 0; i < words.length; i++){
  	words[i] = words[i].substring(0,1).toUpperCase() + words[i].substring(1);
  }
  return words.join(" ");
}

6. Find max number in each sub-array of a given array 

function largestOfFour(arr) {
//got sort function help from here: http://stackoverflow.com/questions/1063007/how-to-sort-an-array-of-integers-correctly
  // You can do this!
  var result = [];
  for(var i in arr){
  	arr[i]=arr[i].sort(function (a, b) {  return a - b;  });
  	result.push(arr[i][arr[i].length-1]);
  	
  }
  return result;
}

7. Check if a given string matches a target

function confirmEnding(str, target) {

  var targetLength = target.length;
  var char = str.substr(str.length-targetLength,str.length);
  if(char === target){
  	
  	return true;
  }
 
  return false;
}

confirmEnding("Bastian hew", "hew");

8. Repeat string given num times

function repeatStringNumTimes(str, num) {
  // repeat after me
  var i=0;
  var result = '';
  while(i<num){
  	result += str;
  	i++;
  }
  return result;
}

repeatStringNumTimes("abc", 3);


9. Truncate string

function truncateString(str, num) {
 if(num<=3){
	  str.slice(0,num);
	  str = str.slice(0,num)+"...";
 }
 else if(str.length > num){
    num = num-3;
    str.slice(0,num);
	  str = str.slice(0,num)+"...";
 }
 else if(str.length<=num ){
	  str.slice(0,num);
	  str = str.slice(0,num);
 }
 return str;
}


10. Chunky Monkeys

function chunkArrayInGroups(arr, size) {
  
  var new_arr = [];
  var split = size;
  
  for(var i=0; i<arr.length; i=i+size)
  { 
  	new_arr.push(arr.slice(i,i+size));
  }
  
  return new_arr;
}

11. Slasher

function slasher(arr, howMany) {
  
  return arr.splice(howMany,arr.length);
 
}

12. Mutations

function mutation(arr) {
arr[0]=arr[0].toLowerCase();
arr[1]=arr[1].toLowerCase();
var result;
for(var i=0; i<arr[1].length; i++){
	
	result = arr[0].indexOf(arr[1][i]);
	if(result == -1){
		return false
	}
	
}
return true;
}

13. Falsy Bouncer

function bouncer(arr) {
    var filtered = arr.filter(isBigEnough);

    function isBigEnough(value) {
        var falsy = [false, null, undefined, NaN, "", 0];

        for (var i = 0; i < falsy.length; i++) {

            if (falsy.indexOf(value) == -1) {
                return value;
            }

        }
    }
    return filtered;

}

14. Destroyer

function destroyer(arr) {

  var args = [];
  for(var i=1;i<arguments.length;i++){
  	
  	args.push(arguments[i]);
  }
  
  var results = [];
  for(var i=0;i<arr.length;i++){
  	
  	 if(args.indexOf(arr[i])== -1){
  	 	results.push(arr[i]);
  	 }
  }
  return results;
}

15. Get index to insert

function getIndexToIns(arr, num) {
  
  arr = arr.sort(function(a,b){return a - b});
  console.log(arr);
  var result;
  for(var i=0; i <= arr.length; i++){
  	if(num <= arr[i]){
		console.log(arr[i]);
  		result = i;
  		return result;
  	}
  }
  result = i-1;
 return result;
}

16. Ceaser Cipher

function rot13(str) { 

  var result = '';
  var num;
  
  for (var i=0; i<str.length; i++){
  	  
  	 if(str[i].match(/\W/g)){
  	 	
  	 	word = str[i];
  	 	
  	 }
  	 else if(str[i].charCodeAt()+13 > 90){
  	 	
  	 	var test = 13 -(90 - str[i].charCodeAt());
  	 	word = String.fromCharCode(64+test);

  	 }
  	 else{
  	    word = String.fromCharCode(str[i].charCodeAt()+13);

  	 }
  	 
  	 result += word;
  }
  return result;
}
